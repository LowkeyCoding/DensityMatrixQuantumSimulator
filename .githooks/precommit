#!/bin/bash

# Pre-commit hook to ensure tests pass before committing to master

# Configuration
TARGET_BRANCH="master"
BUILD_DIR="build-release"
BUILD_CMD="cmake --build ."
TEST_CMD="ctest --output-on-failure"
SKIP_HOOK=false

# Check for skip flag in commit message
COMMIT_MSG_FILE=$1
if grep -q "\[skip tests\]" "$COMMIT_MSG_FILE"; then
    echo "⚠️  Skipping tests due to commit message"
    SKIP_HOOK=true
fi

# Check for environment variable to skip hook
if [ "$SKIP_PRECOMMIT_TESTS" = "true" ]; then
    echo "⚠️  Skipping tests due to environment variable"
    SKIP_HOOK=true
fi

current_branch=$(git symbolic-ref --short HEAD 2>/dev/null)

# Only run checks if committing to master branch
if [ "$current_branch" = "$TARGET_BRANCH" ] && [ "$SKIP_HOOK" = false ]; then
    echo "=== Pre-commit Check for Master Branch ==="
    
    # Check if we're in the right directory
    if [ ! -f "CMakeLists.txt" ]; then
        echo "❌ CMakeLists.txt not found. Are you in the project root?"
        exit 1
    fi
    
    # Create build directory if it doesn't exist
    if [ ! -d "$BUILD_DIR" ]; then
        echo "Creating build directory..."
        mkdir -p "$BUILD_DIR"
    fi
    
    # Navigate to build directory
    cd "$BUILD_DIR" || exit 1
    
    # Configure project if needed
    if [ ! -f "CMakeCache.txt" ]; then
        echo "Configuring project with CMake..."
        if ! cmake ..; then
            echo "❌ CMake configuration failed!"
            exit 1
        fi
    fi
    
    # Build the project
    echo "Building project..."
    if ! eval "$BUILD_CMD"; then
        echo "❌ Build failed!"
        exit 1
    fi
    
    # Run tests
    echo "Running tests..."
    if ! eval "$TEST_CMD"; then
        echo "❌ Tests failed!"
        echo "You can skip this hook with:"
        echo "  SKIP_PRECOMMIT_TESTS=true git commit"
        echo "  or include '[skip tests]' in your commit message"
        exit 1
    fi
    
    echo "✅ All tests passed! Proceeding with commit."
elif [ "$current_branch" = "$TARGET_BRANCH" ] && [ "$SKIP_HOOK" = true ]; then
    echo "⚠️  Skipping tests for master branch commit (override active)"
else
    echo "Not on master branch ($current_branch), skipping pre-commit tests."
fi

exit 0